variables:
  var.conda_version: 4.7.5
  var.conda_build_version: 3.18
jobs:
  - job: Linux

    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 300
    strategy:
      maxParallel: 2
      matrix:
        Python37:
          imageName: 'Ubuntu-16.04'
          var.arch: x64
        Python37-x86:
          imageName: 'Ubuntu-16.04'
          var.arch: x86


    pool:
      vmImage: $(imageName)

    steps:
      - bash: |
          set -x
          if [ -n "$(System.PullRequest.SourceCommitId)" ]; then
            git checkout $(System.PullRequest.SourceCommitId)
          fi
        displayName: Checkout pull request HEAD
      - bash: |

          if [ $VAR_ARCH == "x86" ]; then
             curl -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86.sh
             /bin/bash Miniconda3-latest-Linux-x86.sh -p /opt/miniconda3-x86 -b
             echo "##vso[task.prependpath]/opt/miniconda3-x86/bin"
          else
             curl -O https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
             /bin/bash Miniconda3-latest-Linux-x86_64.sh -p /opt/miniconda3 -b
             echo "##vso[task.prependpath]/opt/miniconda3/bin"
          fi
        displayName: "Installing Miniconda"
      - bash: |
          source activate
          which conda
          if [ $VAR_ARCH != "x86" ]; then
            conda update --yes --name base -c defaults conda
          fi
          conda create --yes --quiet --name bld
          conda activate bld

          conda install --yes --name bld conda-build
        displayName: "Creating updated environment with conda-build..."
      - bash: |
          sudo apt-get install -y ccache
          ccache -M 400M
      - bash: |
          set -x
          source activate
          conda activate bld
          if [ ${VAR_ARCH} == "x86" ]; then
            LINUX32=$(which linux32)
            echo "LINUX32: ${LINUX32}"
          fi
          PYTHON_VERSIONS="27 34 35 36 37"
          for PYV in ${PYTHON_VERSIONS}; do
            ${LINUX32} conda build --python "$PYV" --output-folder channel recipe
            ccache --show-stats
          done
      - task: CopyFiles@2
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)/channel/'
          contents: '*/simpleitk*.tar.bz2'
          targetFolder: $(Build.ArtifactStagingDirectory)
          flattenFolders: false
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: AnacondaPackage
